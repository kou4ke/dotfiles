nnoremap [ale] <Nop>
nmap ,a [ale]

let g:ale_statusline_format = ['⨉ %d', '⚠ %d', '⬥ ok']
let g:ale_echo_msg_error_str = 'E'
let g:ale_echo_msg_warning_str = 'W'
let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
let g:ale_lint_on_save = 1
let g:ale_lint_on_text_changed = 1
let g:ale_lint_on_enter = 1
let g:ale_set_quickfix = 1
let g:ale_linters_explicit = 1
let g:ale_linters = {
\  'javascript': ['eslint'],
\  'typescript': ['tslint'],
\  'json': ['jq', 'jsonlint'],
\  'html': ['HTMLHint'],
\  'yaml': ['language-server'],
\  'ruby': ['rubocop'],
\  'sh': ['language-server'],
\  'ansible': ['ansible-lint'],
\}
let g:ale_fixers = {
\  'javascript': ['eslint', 'remove_trailing_lines', 'trim_whitespace' ],
\  'typescript': ['tslint', 'remove_trailing_lines', 'trim_whitespace' ],
\  'json': ['jq', 'trim_whitespace', 'remove_trailing_lines' ],
\  'ruby': ['rubocop'],
\  'yaml': ['prettier', 'remove_trailing_lines', 'trim_whitespace' ],
\  'sh': ['shfmt', 'trim_whitespace' ],
\  'terraform': ['terraform', 'remove_trailing_lines', 'trim_whitespace' ],
\}
let g:ale_fix_on_save = 0
let g:ale_completion_enabled = 0

" terraform
let g:terraform_align=1
let g:terraform_fmt_on_save=1

nnoremap <silent> [ale]f :<C-u>ALEFix<CR>
nnoremap <silent> [ale]l :<C-u>ALELint<CR>

command! RuboAutoCorrect call s:rubocop_auto_correct()

function! s:rubocop_auto_correct()
  let l:filename = @%
  let l:rubocop_cmd = 'rubocop '
  let l:auto_correct_opts = '-a '
  let l:rubocop_output = system(l:rubocop_cmd.l:auto_correct_opts.' '.l:filename)
  edit

  if has('gui_macvim')
    syntax on
  endif

  echo l:filename
  echo l:rubocop_output
endfunction
